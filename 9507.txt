Generations of Tribbles 성공 한국어   

문제
꿍은 군대에서 진짜 할짓이 없다. 그래서 꿍만의 피보나치를 만들어보려고 한다. 
기존의 피보나치는 너무 단순해서 꿍은 좀더 복잡한 피보나치를 만들어보고자 한다. 
그래서 다음과 같은 피보나치를 만들었다. 꿍만의 피보나치 함수가 koong(n)이라고 할 때,

n < 2 :                         1
n = 2 :                         2
n = 3 :                         4
n > 3 : koong(n − 1) + koong(n − 2) + koong(n − 3) + koong(n − 4)
이다.

여러분도 꿍 피보나치를 구해보아라.

 

입력
입력의 첫번째 줄을 테스트케이스의 개수 t (0 < t < 69)가 주어진다. 다음 t줄에는 몇번째 피보나치를 구해야하는지를 나타내는 n(0 ≤ n ≤ 67)이 주어진다.

출력
각 테스트케이스에 대해, 각 줄에 꿍 피보나치값을 출력하라.

예제 입력 1  복사
8
0
1
2
3
4
5
30
67
예제 출력 1  복사
1
1
2
4
8
15
201061985
7057305768232953720

PS:
	* 메모이제이션을 통해 N일 때 가지는 피보나치 수열의 값을 저장한다.
	* 반복문을통해 N일 떄 가지는 피보나치 수열의 값을 계산한다.
	* 범위만 주의하면 되는 문제이다.
	
점화식:
	DP[N] = DP[N-1] + DP[N-2] + DP[N-3] + DP[N-4] ( 4 <= N <= 67 )
	
	
import java.io.*;
import java.util.*;

public class Main {
    static long[] dp;
    static int N, T;

    public static void main(String args[]) throws Exception {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        T = Integer.parseInt(br.readLine());

        dp = new long[68];

        dp[0] = dp[1] = 1; dp[2] = 2; dp[3] = 4;

        for (int i = 4; i <= 67; ++i)
            dp[i] = dp[i - 1] + dp[i - 2] + dp[i - 3] + dp[i - 4];

        while (T-- != 0) {

            int n = Integer.parseInt(br.readLine());

            bw.write(dp[n] + "\n");
        }

        bw.flush();
    }
}


