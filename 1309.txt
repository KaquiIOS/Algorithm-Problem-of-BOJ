동물원 성공 

문제
어떤 동물원에 가로로 두칸 세로로 N칸인 아래와 같은 우리가 있다.



이 동물원에는 사자들이 살고 있는데 사자들을 우리에 가둘 때, 가로로도 세로로도 붙어 있게 배치할 수는 없다. 이 동물원 조련사는 사자들의 배치 문제 때문에 골머리를 앓고 있다.

동물원 조련사의 머리가 아프지 않도록 우리가 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지인지를 알아내는 프로그램을 작성해 주도록 하자. 사자를 한 마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정한다.

입력
첫째 줄에 우리의 크기 N(1≤N≤100,000)이 주어진다.

출력
첫째 줄에 사자를 배치하는 경우의 수를 9901로 나눈 나머지를 출력하여라.

예제 입력 1  복사
4
예제 출력 1  복사
41

PS:
	* 그림을 그려보면 이해가 잘 되는 문제.
	* 메모이제이션을 통해 가로길이가 N일때 호랑이를 배치하는 방법의 수를 저장한다.
	* 반복문을 통해 가로길이가 N일때 호랑이를 배치하는 방법의 수를 계산한다.
	* N = 0 인 경우, 호랑이를 배치안하는 경우도 하나의 경우로 생각한다.
	
	* 각 블럭에 번호를 붙인다고 생각하면
	
	N = 1 <기본 블럭>
	
	1번		2반		3번
	□       □		■
	□		■		□
	
	N = 2 
	
	4번
	1 - 1
	
	5번
	1 - 2, 1 - 2
	
	6번
	2 - 1, 2 - 3
	
	7번
	3 - 1, 3 - 2
	
	
	<조금 더 생각을 정리하고 다시 적기>
	<일단은 DP[N]이라 하면 N의 경우를 구하려면 N-1의 블럭들을 2번씩 쓰고, N크기의 빈 사육장을 N-2에 붙이는 경우를 합한 것 이라고 짧게 정리 >

점화식:
	DP[N] = ((DP[N-1] * 2) % MOD + DP[N-2] % MOD) % MOD
	
import java.io.*;
import java.util.*;

public class Main {
    static final int MOD = 9901;
    static int[] dp;
    static int N, len = 0;

    public static void main(String args[]) throws Exception {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        N = Integer.parseInt(br.readLine());

        dp = new int[N + 1];

        dp[0] = 1; dp[1] = 3;

        for(int i = 2; i <= N; ++i)
            dp[i] = ((dp[i-1] * 2) % MOD + dp[i-2] % MOD) % MOD;

        bw.write(dp[N] + "\n");
        bw.flush();
    }
}
	
	
