제곱수의 합 성공 
시간 제한	메모리 제한	제출	정답	맞은 사람	정답 비율
2 초	128 MB	9361	3805	2822	40.593%
문제
어떤 자연수 N은 그보다 작거나 같은 제곱수들의 합으로 나타낼 수 있다. 예를 들어 11=32+12+12(3개 항)이다. 
이런 표현방법은 여러 가지가 될 수 있는데, 11의 경우 11=22+22+12+12+12(5개 항)도 가능하다. 
이 경우, 수학자 숌크라테스는 “11은 3개 항의 제곱수 합으로 표현할 수 있다.”라고 말한다. 
또한 11은 그보다 적은 항의 제곱수 합으로 표현할 수 없으므로, 11을 그 합으로써 표현할 수 있는 제곱수 항의 최소 개수는 3이다.

주어진 자연수 N을 이렇게 제곱수들의 합으로 표현할 때에 그 항의 최소개수를 구하는 프로그램을 작성하시오.

입력
첫째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 100,000)

출력
주어진 자연수를 제곱수의 합으로 나타낼 때에 그 제곱수 항의 최소 개수를 출력한다.

예제 입력 1  복사
7
예제 출력 1  복사
4

PS:
	* 메모이제이션을 통해 DP[N]에 N이 제곱수로 표현될 때 가질 수 있는 항의 최소 개수를 저장한다.
	* 반복문을 통해 N이 제곱수로 표현될 때 가질 수 있는 항의 최소 개수를 계산한다.
	* N이 가질 수 있는 제곱수 k의 종류는 1 ~ SQRT(N) 사이의 값이다. (ex. 4 -> 1^2, 2^2 을 가질 수 있다. 13 -> 1^2, 2^2, 3^2 을 가질 수 있다)
	* K = (1 ~ SQRT(N))^2 이라고 하면 DP[N-K] 는 제곱수를 하나 선택하고 N-K 값이 가지는 최소 개수를 그대로 사용한다는 것이다.

점화식:
	DP[N] = min(DP[N], DP[N-K^2] + 1) (1 <= K <= SQRT(N))
	

import java.io.*;
import java.util.*;

public class Main {

    final static int MAX = 10001;
    static int[]dp = new int[100001];
    static int N;

    public static void main(String args[]) throws Exception {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        N = Integer.parseInt(br.readLine());

        /*
        for(int i = 1; i <= N; ++i) {
            dp[i] = i;
            int pre = (int)Math.sqrt(i);
            for(int j = pre; j >= 1; --j)
                dp[i] = Math.min(dp[i], dp[i-(int)Math.pow(j,2)] + 1);
        }
        */

        for(int i = 1; i <= N; ++i) {
            dp[i] = i;
            for(int j = 1; j * j <= i; ++j)
                dp[i] = Math.min(dp[i], dp[i-j*j] + 1);
        }

        /*for(int i = 0; i <= N; ++i)
            bw.write(i + " : " + dp[i] + "\n");*/

        bw.write(dp[N] + "\n");
        bw.flush();
    }
}