동전 성공 

문제
우리나라 화폐단위, 특히 동전에는 1원, 5원, 10원, 50원, 100원, 500원이 있다. 
이 동전들로는 모두 정수의 금액을 만들 수 있으며 그 방법도 여러 가지가 있을 수 있다. 
예를 들어, 30원을 만들기 위해서는 1원짜리 30개 또는 10원짜리 2개와 5원짜리 2개 등의 방법이 가능하다.

동전의 종류가 주어질 때에 주어진 금액을 만드는 모든 방법을 세는 프로그램을 작성하시오.

입력
입력의 첫 줄에는 테스트 케이스의 개수 T(1 ≤ T ≤ 10)가 주어진다. 
각 테스트 케이스의 첫 번째 줄에는 동전의 가지 수 N(1 ≤ N ≤ 20)이 주어지고 두 번재 줄에는 N가지 동전의 각 금액이 오름차순으로 정렬되어 주어진다. 
각 금액은 정수로서 1원부터 10000원까지 있을 수 있으며 공백으로 구분된다. 세 번째 줄에는 주어진 N가지 동전으로 만들어야 할 금액 M(1 ≤ M ≤ 10000)이 주어진다.

편의를 위해 방법의 수는 231 - 1 보다 작다고 가정해도 된다.

출력
각 테스트 케이스에 대해 입력으로 주어지는 N가지 동전으로 금액 M을 만드는 모든 방법의 수를 한 줄에 하나씩 출력한다.

예제 입력 1  복사
3
2
1 2
1000
3
1 5 10
100
2
5 7
22
예제 출력 1  복사
501
121
1


PS:
	* 메모이제이션을 통해 M원을 만들 수 있는 방법의 수를 저장한다.
	* 반복문을 통해 M원을 만들 수 있는 방법의 수를 계산한다.
	* 각 M 원에서 Coin[i] 를 뺀 값을 더하면 K원을 만드는 방법이 나온다.
	
점화식:
	DP[N] = DP[N] + DP[N-COINS[K]]  (0 < K < 20)
	
	
import java.io.*;
import java.util.*;

public class Main {

    static final int NOT_VISIT = -1, MAX = 10002;
    static int[] dp, coins;
    static int N, T, K;

    static BufferedReader br = null;
    static BufferedWriter bw = null;
    static StringTokenizer st = null;

    public static void main(String args[]) throws Exception {

        br = new BufferedReader(new InputStreamReader(System.in));
        bw = new BufferedWriter(new OutputStreamWriter(System.out));

        T = Integer.parseInt(br.readLine());

        dp = new int[MAX];
        coins = new int[20];

        while(T-- != 0) {

            N = Integer.parseInt(br.readLine());

            st = new StringTokenizer(br.readLine());

            for(int i = 0; i < N; ++i)
                coins[i] = Integer.parseInt(st.nextToken());

            K = Integer.parseInt(br.readLine());

            Arrays.fill(dp, 0, K + 1, 0);

            dp[0] = 1;

            for(int i = 0 ; i < N; ++i) {
                for(int j = coins[i]; j <= K; ++j) {
                    dp[j] += dp[j-coins[i]];
                }
            }
            bw.write(dp[K] + "\n");
        }
        bw.flush();
    }
}

